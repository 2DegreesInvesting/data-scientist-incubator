<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pr on Back to posts</title>
    <link>/tags/pr/</link>
    <description>Recent content in pr on Back to posts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2dii</copyright>
    <lastBuildDate>Tue, 12 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/pr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interdependent pull requests</title>
      <link>/2019/11/12/2019-11-12_pr-interdependent/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/11/12/2019-11-12_pr-interdependent/</guid>
      <description>Interdependent pull requestsSituationAfter the contributor submitted a first pull request (pr1), andbefore the maintainer merges it into the source repository, the contributorstarts a second pull request (pr2) that depends on pr1.
The maintainer edits pr1 and accepts it (squash-merges it into the upstream/master). But pr2 now is a mess and the contributor must fix it before it can be merged.
pr_init(&#34;pr1&#34;)New f()pr_push()pr_init(&#34;</description>
    </item>
    
    <item>
      <title>usethis::pr_sync()</title>
      <link>/2019/11/05/2019-11-05_pr-sync/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/11/05/2019-11-05_pr-sync/</guid>
      <description>usethis::pr_sync( )Before merging your pull request, the source repository adds a conflicting commit. Now what?
“pr_sync( ) is a shortcut for pr_pull( ), pr_pull_upstream( ), and pr_push( )” (usethis)
https://twitter.com/mauro_lepore
License: CCO
create_from_github()# Fork on GitHub, then run from a terminal:git clone git@github.com:maurolepore/abc.gitcd abc# Contrib@LAPTOP ~/abc (master)git remote add upstream git@github.com:an-org/abc.gitgit pull upstream mastergit branch --set-upstream-to=upstream/mastergit_sitrep()git remote -vpr_init(&#34;</description>
    </item>
    
    <item>
      <title>Pull request helpers</title>
      <link>/2019/10/29/2019-10-29_pr-helpers/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/10/29/2019-10-29_pr-helpers/</guid>
      <description>2019-10-29, pull request helpers GitHub issue for this meetup.
We&#39;ll walk through the help file of the Helpers for GitHub pull requests
Setup Read Setup advice and if you need more help:
Need more help? See [More setup].
For contributors  To contribute to a package, first use create_from_github(owner/repo) to fork the source repository, and then check out a local copy.
 Or fork and clone as usual.
pr_init()More setup   Instructions to setup GitHub, R, RStudio, and Git.</description>
    </item>
    
    <item>
      <title>Gotchas when moving code from a script to an R package</title>
      <link>/1/01/01/gotcha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/01/gotcha/</guid>
      <description>Function interfaceAvoid relying on the global environmentAvoid modifying the global environment, e.g. with &amp;lt;&amp;lt;-Arguments that provide core data are requiredDescriptor arguments are usually requiredAvoid reading and writing operationsPackagingDeveloper setupuse_package(&#34;dplyr&#34;) not library(dplyr)The tidyverse is for EDA, not packagesuse_data_raw(), then use_data()use_data_raw(), then use_data()Use the .data pronounConsider using internal dataCode smells and feelsSimplify if() with objects named meaningfullyProgram for columns with clean_namesAvoid long-running temporary objectsIf possible, extract functions to the top levelExtract commented sections into functionsError proneAvoid hidden arguments: Extract functions with all argumentsSeparate functions, data, and scriptsA non-package projectA package projectif() uses a single TRUE or FALSE1 is equal to 1L but not identicalStyleLimit your code to 80 characters per lineNames should use only lowercase letters, numbers, and &#34;</description>
    </item>
    
  </channel>
</rss>